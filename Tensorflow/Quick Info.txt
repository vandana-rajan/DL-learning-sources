# Some quick info about TF I learnt from coursera course on TF [https://www.coursera.org/learn/intro-tensorflow]

Tensors are one step above matrices. So you have a scalar, then a vector, then a matrix and then next comes tensors like 3D tensor, 4D tensor etc.

Tensorflow functions using Directed Acyclic Graphs (DAGs). 

The nodes of this graph are operations like add, multiply or softmax etc and the edges are tensors. 
Computations are performed by the flow of tensors over this graph and hence the name TensorFlow.

TF performs lazy computations. For example

>> a = tf.constant([1,2,3])
>> b = tf.constant([4,5,6])
>> c = tf.add(a,b)

This does not produce the value of c immediately. Rather, it will create a tensor for c.

>>> c
<tf.Tensor 'Add:0' shape=(3,) dtype=int32>

In order to find the actual value of c, we need to create a TF session and run that session.

>> with tf.Session() as sess:
>>      sess.run(c)

This will give the output of c

>> array([4, 6, 8], dtype=int32)

Instead of sess.run(c), c.eval() would also give the same result. 

Now for development purposes where we need to examine the values of tensors immediately, we can use 'eager evaluation'. Note that
this should be used only for development purposes and not for production code.

Example:

>>> import tensorflow as tf

>>> from tensorflow.contrib.eager.python import tfe

>>> tfe.enable_eager_execution()

>>> a = tf.constant([1,2,3])

>>> b = tf.constant([3,4,5])

>>> c = tf.add(a,b)

>>> c
<tf.Tensor: id=2, shape=(3,), dtype=int32, numpy=array([4, 6, 8], dtype=int32)>

Now that we know how to create a TF graph, we need to visualize the graph as well. We can use 'tf.summary.FileWriter' for this.

Example,

>> with tf.Session() as sess:

>>      with tf.summary.FileWriter('summaries',sess.graph) as writer:

>>            c1 = sess.run(c)

This will create a directory called summaries which contain an event file. Now we need 'tensorboard' to visualize this graph.

Tensors can be stacked on top of each other using 'tf.stack' command. They can also be sliced by specifying the rows and columns.

Examples:

>> x[:,1]

>> x[1, 0:2]

Tensors can be reshaped using 'tf.reshape' function. 

>> x = tf.constant([[3,5,7],[4,6,8]])

>> y = tf.reshape(x,[3,2])

>>> with tf.Session() as sess:
...     sess.run(y)
... 
array([[3, 5],
       [7, 4],
       [6, 8]], dtype=int32)

Note here that TF goes through x by taking elements from each row.

So far we have seen how to create and use constants in TF. Now lets look at variables, whose values change as the programme evolves.








